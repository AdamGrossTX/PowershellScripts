<?xml version='1.0' encoding='utf-8' standalone='yes'?>
<assembly
    xmlns="urn:schemas-microsoft-com:asm.v3"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    manifestVersion="1.0"
    >
  <assemblyIdentity
      language="neutral"
      name="Microsoft-Windows-ContentDeliveryManager-Utilities"
      processorArchitecture="*"
      version="0.0.0.0"
      />
  <migration
      alwaysProcess="yes"
      replacementSettingsVersionRange="0-4"
      settingsVersion="5"
      >
    <migXml xmlns="">
      <rules>
        <!-- rules to execute special privacy settings migration --> 
        <conditions operation="AND">

          <!-- the OS version is between 10.0 and 10.0.14393 (TH1 to RS1 inclusive) -->
          <condition>MigXmlHelper.IsOSLaterThan("NT","10.0")</condition>
          <condition>MigXmlHelper.IsOSEarlierThan("NT","10.0.14393")</condition>

          <!-- this not a Server edition -->
          <condition negation="Yes">MigXmlHelper.DoesStringContentContain("Registry", "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion [EditionID]", "Server")</condition>

          <!-- this not PPIPro edition -->
          <condition negation="Yes">MigXmlHelper.DoesStringContentContain("Registry", "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion [EditionID]", "PPIPro")</condition>

          <!-- system is not joined to a domain, NV Domain does not exist or it's empty --> 
          <conditions operation="OR">
            <condition negation="Yes">MigXmlHelper.DoesObjectExist("Registry", "HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters [NV Domain]")</condition>
            <condition>MigXmlHelper.DoesStringContentEqual("Registry", "HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters [NV Domain]", "")</condition>
          </conditions>

          <!-- system is not managed by SCCM, ProductCode does not exist or it's empty --> 
          <conditions operation="OR">
            <condition negation="Yes">MigXmlHelper.DoesObjectExist("Registry", "HKLM\SOFTWARE\Microsoft\SMS\Mobile Client [ProductCode]")</condition>
            <condition>MigXmlHelper.DoesStringContentEqual("Registry", "HKLM\SOFTWARE\Microsoft\SMS\Mobile Client [ProductCode]", "")</condition>
          </conditions>

          <!-- system is not updated using WSUS -->
          <condition negation="Yes">MigXmlHelper.DoesStringContentEqual("Registry", "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU [UseWUServer]", "0x00000001")</condition>

          <!-- we don't have an explicit request to perform a normal migration or we're planning on showing the Upgrade OOBE Privacy Consent Experience -->
          <conditions operation="OR">
            <condition negation="Yes">MigXmlHelper.DoesStringContentEqual("Registry", "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\CreatorsUpdatePrivacySettings [ShowUI]", "0x00000000")</condition>
            <condition>MigXmlHelper.DoesStringContentEqual("Registry", "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE [PrivacyConsentStatus]", "0x00000000")</condition>
          </conditions>

        </conditions>

        <rules context="System">
          <addObjects>
            <!-- If the regkey created by the WDS App doesn't exist, this will simulate its existence during the gather stage, so that it can be applied. -->
            <conditions>
              <condition negation="yes">MigXmlHelper.DoesObjectExist("Registry", "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\CreatorsUpdatePrivacySettings\SettingChoice\EnableTailoredExperiencesWithDiagnosticData\HKLM [TailoredExperiencesWithDiagnosticDataEnabled]")</condition>
            </conditions>
            <object>
              <location type="Registry">HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\CreatorsUpdatePrivacySettings\SettingChoice\EnableTailoredExperiencesWithDiagnosticData\HKLM [TailoredExperiencesWithDiagnosticDataEnabled]</location>
              <attributes>dword</attributes>
              <bytes>00000000</bytes>
            </object>
          </addObjects>
          <include>
            <objectSet>
              <pattern type="Registry">HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\CreatorsUpdatePrivacySettings\SettingChoice\EnableTailoredExperiencesWithDiagnosticData\HKLM [TailoredExperiencesWithDiagnosticDataEnabled]</pattern>
            </objectSet>
          </include>
        </rules>
      </rules>

      <rules>
        <!-- rules to execute normal privacy settings migration --> 
        <conditions operation="OR">

          <!-- the OS version is after 10.0.14393 (after RS1 exclusive) -->
          <condition negation="Yes">MigXmlHelper.IsOSEarlierThan("NT","10.0.14393")</condition>

          <!-- this is one of the Server editions -->
          <condition>MigXmlHelper.DoesStringContentContain("Registry", "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion [EditionID]", "Server")</condition>

          <!-- this is the PPIPro edition -->
          <condition>MigXmlHelper.DoesStringContentContain("Registry", "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion [EditionID]", "PPIPro")</condition>

          <!-- sytem is joined to a domain, NV Domain exists and it's not empty -->
          <conditions operation="AND">
            <condition>MigXmlHelper.DoesObjectExist("Registry", "HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters [NV Domain]")</condition>
            <condition negation="Yes">MigXmlHelper.DoesStringContentEqual("Registry", "HKLM\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters [NV Domain]", "")</condition>
          </conditions>

          <!-- system is managed by SCCM, ProductCode exists and it's not empty -->
          <conditions operation="AND">
            <condition>MigXmlHelper.DoesObjectExist("Registry", "HKLM\SOFTWARE\Microsoft\SMS\Mobile Client [ProductCode]")</condition>
            <condition negation="Yes">MigXmlHelper.DoesStringContentEqual("Registry", "HKLM\SOFTWARE\Microsoft\SMS\Mobile Client [ProductCode]", "")</condition>
          </conditions>

          <!-- system is updated using WSUS -->
          <condition>MigXmlHelper.DoesStringContentEqual("Registry", "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU [UseWUServer]", "0x00000001")</condition>

          <!-- we have an explicit request to perform a normal migration and we're not planning on showing the Upgrade OOBE Privacy Consent Experience -->
          <conditions operation="AND">
            <condition>MigXmlHelper.DoesStringContentEqual("Registry", "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\CreatorsUpdatePrivacySettings [ShowUI]", "0x00000000")</condition>
            <condition negation="Yes">MigXmlHelper.DoesStringContentEqual("Registry", "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE [PrivacyConsentStatus]", "0x00000000")</condition>
          </conditions>

        </conditions>
        <rules context="System">
          <include>
            <objectSet>
              <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\Privacy [TailoredExperiencesWithDiagnosticDataEnabled]</pattern>
            </objectSet>
          </include>
        </rules>
        <rules context="System">
          <detects>
            <detect>
              <!-- Gather and copy the AdvertisingInfo enablement state if the source regkey doesn't exist -->
              <condition negation="yes">MigXmlHelper.DoesObjectExist("Registry", "HKLM\Software\Microsoft\Windows\CurrentVersion\Privacy [TailoredExperiencesWithDiagnosticDataEnabled]")</condition>
            </detect>
          </detects>
          <include>
            <objectSet>
              <pattern type="Registry">HKLM\Software\Microsoft\Windows\CurrentVersion\AdvertisingInfo [Enabled]</pattern>
            </objectSet>
          </include>
        </rules>
        <rules context="User">
          <include>
            <objectSet>
              <pattern type="Registry">HKCU\Software\Microsoft\Windows\CurrentVersion\Privacy [TailoredExperiencesWithDiagnosticDataEnabled]</pattern>
            </objectSet>
          </include>
        </rules>
        <rules context="User">
          <detects>
            <detect>
              <!-- Gather and copy the AdvertisingInfo enablement state if the source regkey doesn't exist -->
              <condition negation="yes">MigXmlHelper.DoesObjectExist("Registry", "HKCU\Software\Microsoft\Windows\CurrentVersion\Privacy [TailoredExperiencesWithDiagnosticDataEnabled]")</condition>
            </detect>
          </detects>
          <include>
            <objectSet>
              <pattern type="Registry">HKCU\Software\Microsoft\Windows\CurrentVersion\AdvertisingInfo [Enabled]</pattern>
            </objectSet>
          </include>
        </rules>
      </rules>

      <rules context="User">
        <include>
          <objectSet>
            <pattern type="Registry">HKCU\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager\* [*]</pattern>
            <pattern type="Registry">HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\SoftLanding [Enabled]</pattern>
          </objectSet>
        </include>
        <exclude>
          <objectSet>
            <pattern type="Registry">HKCU\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager [ContentDeliveryAllowed]</pattern>
          </objectSet>
        </exclude>
      </rules>
    </migXml>
  </migration>
</assembly>
